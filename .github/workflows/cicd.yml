name: cicd

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout (Optional, only needed if using some files locally)
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa.pem
        chmod 600 ~/.ssh/id_rsa.pem

    - name: Add to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts


    - name: Set up Node js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Move all files to sbp-client-nuxt
      run: |
        mkdir -p .sbp-client-nuxt
        mv * .sbp-client-nuxt/
        cd .sbp-client-nuxt

    - name: Build
      run: npm install && npm run build

    - name: Copy output to VM with timestamp
      run: |
        TIMESTAMP=$(date +%Y%m%d_%H%M%S)
        cd ../
        tar -czf "output_$TIMESTAMP.tar.gz" .sbp-client-nuxt
        scp -i ~/.ssh/id_rsa.pem -o StrictHostKeyChecking=no "output_$TIMESTAMP.tar.gz" ec2-user@${{ secrets.HOST }}:~/JAVASERVER/
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

    - name: Restart App on VM
      run: |
        ssh -i ~/.ssh/id_rsa.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.HOST }}  << EOF

          cd ~/JAVASERVER
          tar -xzf output_${{ env.TIMESTAMP }}.tar.gz -C ./
          mv .sbp-client-nuxt output_${{ env.TIMESTAMP }}

          echo "Killing process on port 3000..."
          sudo lsof -t -i:3000 | xargs -r kill -15

          echo "Starting new app..."
          cd output_${{ env.TIMESTAMP }}
          nohup npm run start > sbp-client-nuxt.log 2>&1 < /dev/null &
          
          rm ../output_${{ env.TIMESTAMP }}.tar.gz
          
        EOF